"""
Label the dataset generated by models
"""

# import rule-based grader

# QWen2.5 3b instruct: test set Best score of 5: 0.8726307808946171, Mean score of 5 samples: 0.5695223654283549
# Training dataset: Best score: 0.92265489094072, mean score: 0.6262009902315001

from verl.utils.reward_score import gsm8k
import pandas as pd
import numpy as np

if __name__ == '__main__':
    import argparse
    parser  = argparse.ArgumentParser()
    parser.add_argument('--input_file', required=True, type=str)
    parser.add_argument('--output_file', required=True, type=str)

    args = parser.parse_args()

    dataset = pd.read_parquet(args.input_file)

    # for each data item, we rank the responses using rule-based RM
    ranks = []
    best_scores = []
    mean_scores = []

    for idx, row in dataset.iterrows():
        responses = row['responses']
        ground_truth = row['reward_model']['ground_truth']
        scores = []

        for response in responses:
            score = gsm8k.compute_score(response, ground_truth=ground_truth)
            scores.append(score)

        best_scores.append(np.max(scores))
        mean_scores.append(np.mean(scores))
        
        # produce a ranking order. from lower to higher
        sorted_idx = np.argsort(scores)
        ranks.append(sorted_idx)

    best_scores_mean = np.mean(best_scores)
    mean_scores_mean = np.mean(mean_scores)
    print(f'Best score: {best_scores_mean}, mean score: {mean_scores_mean}')

    dataset['ranks'] = ranks

    dataset.to_parquet(args.output_file)
